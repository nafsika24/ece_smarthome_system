[
    {
        "id": "93572a9c83e7ad1b",
        "type": "tab",
        "label": "Alarm",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "67745ff5740502f8",
        "type": "tab",
        "label": "Gases",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1feb7a8dcb9365da",
        "type": "tab",
        "label": "Heating",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "80e237835e31d8fa",
        "type": "tab",
        "label": "Lights",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5813bec09aa8d7a8",
        "type": "tab",
        "label": "Devices",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a8273586a153c2d0",
        "type": "tab",
        "label": "Energy",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "010e84cda878a155",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a0207de35fd24b6d",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "506cc9ad47525aac",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5f04c3706f7a4c9c",
        "type": "ui_group",
        "name": "Default",
        "tab": "a0207de35fd24b6d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e3ffd5e15083fcd3",
        "type": "postgreSQLConfig",
        "name": "pgServer",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "nafsi",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "nafsi",
        "userFieldType": "str",
        "password": "58513nafsi",
        "passwordFieldType": "str"
    },
    {
        "id": "8fd5e4bbc7afea3d",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/window",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "e09a10dfb2627b40"
            ]
        ]
    },
    {
        "id": "e09a10dfb2627b40",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "29c3e8dfaf22f24d",
                "5d3aa3b4baece032"
            ]
        ]
    },
    {
        "id": "29c3e8dfaf22f24d",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "WindowStateInsert",
        "query": "insert into windows (time, isopen, room)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.isopen}}}, '{{{msg.payload.room}}}')",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3aa3b4baece032",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if window is open",
        "property": "payload.isopen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "12f8ee922032831f"
            ]
        ]
    },
    {
        "id": "95e35240147a2130",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "AlarmInsert",
        "query": "INSERT INTO alarm (time, isopen) VALUES (\n'{{{msg.payload.time}}}' \n,{{{msg.payload.isopen}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 450,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "1e4bf634a5bd7077",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 280,
        "wires": []
    },
    {
        "id": "1ce79201f51991c6",
        "type": "join",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 890,
        "y": 280,
        "wires": [
            [
                "f411922cddf6f512"
            ]
        ]
    },
    {
        "id": "12f8ee922032831f",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'window'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 280,
        "wires": [
            [
                "1ce79201f51991c6"
            ]
        ]
    },
    {
        "id": "f411922cddf6f512",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "\n\nvar mes1 = \"Window detected open while alarm is ON in room: \"\n\nmsg= { payload: msg.payload.window.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(msg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "1e4bf634a5bd7077",
                "3a9d74cf2c975197"
            ]
        ]
    },
    {
        "id": "eebca4e980e8c98f",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/door",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 820,
        "wires": [
            [
                "64a1b9fb78619fd9"
            ]
        ]
    },
    {
        "id": "64a1b9fb78619fd9",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 820,
        "wires": [
            [
                "bb444dcca0016bf4",
                "093c8bc7aa607fb6"
            ]
        ]
    },
    {
        "id": "bb444dcca0016bf4",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "DoorInsert",
        "query": "INSERT INTO door (time, state,room) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.state}}},'{{{msg.payload.room}}}');\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "3a52c235cb07cbec",
        "type": "join",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "94b8dad801602539",
        "type": "comment",
        "z": "93572a9c83e7ad1b",
        "name": "Check if any window is open while alarm is ON.",
        "info": "",
        "x": 660,
        "y": 60,
        "wires": []
    },
    {
        "id": "786ea255ecaeb4bd",
        "type": "comment",
        "z": "93572a9c83e7ad1b",
        "name": "Check if any balcony or garage door is open while alarm is ON.",
        "info": "",
        "x": 570,
        "y": 700,
        "wires": []
    },
    {
        "id": "efc25b08e4aacd01",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if door is open",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 840,
        "wires": [
            [
                "aa98705e68d4314c"
            ]
        ]
    },
    {
        "id": "093c8bc7aa607fb6",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check type of door",
        "property": "payload.room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "garage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "balcony",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "central",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 540,
        "y": 840,
        "wires": [
            [
                "efc25b08e4aacd01"
            ],
            [
                "efc25b08e4aacd01"
            ],
            [
                "efc25b08e4aacd01"
            ]
        ]
    },
    {
        "id": "aa98705e68d4314c",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'door'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 800,
        "wires": [
            [
                "3a52c235cb07cbec"
            ]
        ]
    },
    {
        "id": "bdccf42046d09e2b",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 860,
        "wires": []
    },
    {
        "id": "1d648a518b3777a0",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "\nvar mes1 = \"Door detected open while alarm is ON in : \"\n\nmsg= { payload: msg.payload.door.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(msg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 760,
        "wires": [
            [
                "bdccf42046d09e2b",
                "ebe26d72d2c77c15"
            ]
        ]
    },
    {
        "id": "ebe26d72d2c77c15",
        "type": "slack",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Door",
        "emojiIcon": " 🚪",
        "channel": "",
        "x": 1410,
        "y": 740,
        "wires": []
    },
    {
        "id": "960520f4795f322b",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/present",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1100,
        "wires": [
            [
                "b068505f461e4dd2"
            ]
        ]
    },
    {
        "id": "b068505f461e4dd2",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 1100,
        "wires": [
            [
                "0b89e9dcfe284750",
                "79bc15c408001217"
            ]
        ]
    },
    {
        "id": "0b89e9dcfe284750",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if motion is detected",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 1100,
        "wires": [
            [
                "799e3138ee0cead9"
            ]
        ]
    },
    {
        "id": "799e3138ee0cead9",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'motion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "a2a8837ecd8568b4"
            ]
        ]
    },
    {
        "id": "a2a8837ecd8568b4",
        "type": "join",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "aee71c45fe8afccc"
            ]
        ]
    },
    {
        "id": "fa21aad8f65d0d35",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1060,
        "wires": []
    },
    {
        "id": "aee71c45fe8afccc",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "\n\nvar mes1 = \"Motion detected while alarm is ON in room: \"\n\nmsg= { payload: msg.payload.motion.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(msg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1060,
        "wires": [
            [
                "fa21aad8f65d0d35",
                "bead5b539a8586b0"
            ]
        ]
    },
    {
        "id": "bead5b539a8586b0",
        "type": "slack",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Motion",
        "emojiIcon": " 🏃‍♀️",
        "channel": "",
        "x": 1310,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3a9d74cf2c975197",
        "type": "slack",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Window",
        "emojiIcon": " 🪟",
        "channel": "",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "97e44296acfab132",
        "type": "while-loop",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "condi": "msg.payload.isopen ===1",
        "limit": false,
        "limitTime": 10000,
        "time": "wl97e44296acfab132",
        "timeType": "msg",
        "x": 430,
        "y": 460,
        "wires": [
            [],
            [
                "d9f210e72883dd76"
            ]
        ]
    },
    {
        "id": "d9f210e72883dd76",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'alarm'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 460,
        "wires": [
            [
                "1ce79201f51991c6",
                "3a52c235cb07cbec",
                "a2a8837ecd8568b4"
            ]
        ]
    },
    {
        "id": "7f6be84a2874c6de",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/alarm",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 460,
        "wires": [
            [
                "83497a87acd22a10"
            ]
        ]
    },
    {
        "id": "83497a87acd22a10",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 230,
        "y": 460,
        "wires": [
            [
                "97e44296acfab132",
                "95e35240147a2130"
            ]
        ]
    },
    {
        "id": "79bc15c408001217",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "Present Insert",
        "query": "INSERT INTO present (time, state,room) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.state}}},'{{{msg.payload.room}}}');\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 480,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "81eea99c48df43c8",
        "type": "mqtt in",
        "z": "67745ff5740502f8",
        "name": "",
        "topic": "topic/fire",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "e39252131105e271"
            ]
        ]
    },
    {
        "id": "e39252131105e271",
        "type": "json",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "2827eccb9c054d6e",
                "40cef62030951624"
            ]
        ]
    },
    {
        "id": "2827eccb9c054d6e",
        "type": "switch",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "09fbfec068798604"
            ]
        ]
    },
    {
        "id": "9d0c04df2901c6d1",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "09fbfec068798604",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \"ALERT Fire Detected in room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "9d0c04df2901c6d1",
                "ed1e6dfafa0597c0"
            ]
        ]
    },
    {
        "id": "40cef62030951624",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "FIreInsert",
        "query": "INSERT INTO gases (time, value,room,gas_type)\nVALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.value}}},'{{{msg.payload.room}}}','{{{msg.payload.gas_type}}}' );\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "cdb81fd7440a1f94"
            ]
        ]
    },
    {
        "id": "cdb81fd7440a1f94",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "FIreShow",
        "query": "SELECT * FROM gases;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 120,
        "wires": [
            [
                "7005e524bbd7f662"
            ]
        ]
    },
    {
        "id": "7005e524bbd7f662",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "ed1e6dfafa0597c0",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Fire",
        "emojiIcon": "🔥",
        "channel": "",
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "a8cd2acad7bd529a",
        "type": "mqtt in",
        "z": "67745ff5740502f8",
        "name": "",
        "topic": "topic/CO",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 380,
        "wires": [
            [
                "f369f812d8b3629f"
            ]
        ]
    },
    {
        "id": "f369f812d8b3629f",
        "type": "json",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "0407db3cabacdab1",
                "b9b50bc4928f613a"
            ]
        ]
    },
    {
        "id": "0407db3cabacdab1",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "COInsert",
        "query": "INSERT INTO gases (time, value,room,gas_type)\nVALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.value}}},'{{{msg.payload.room}}}','{{{msg.payload.gas_type}}}' );\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "7ffd060929d4684d"
            ]
        ]
    },
    {
        "id": "7ffd060929d4684d",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "COShow",
        "query": "SELECT * FROM gases;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "904ab0fb727a3880"
            ]
        ]
    },
    {
        "id": "904ab0fb727a3880",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "b9b50bc4928f613a",
        "type": "switch",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "04723fad9cc3b59d"
            ]
        ]
    },
    {
        "id": "04723fad9cc3b59d",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \"SOS high CO concentration detected in room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 460,
        "wires": [
            [
                "9f7bfc47f4743159",
                "8627a8950b5fa405"
            ]
        ]
    },
    {
        "id": "9f7bfc47f4743159",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "92acde081e0e197f",
        "type": "mqtt in",
        "z": "67745ff5740502f8",
        "name": "",
        "topic": "topic/CO2",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 640,
        "wires": [
            [
                "4e6e22ec55caa690"
            ]
        ]
    },
    {
        "id": "4e6e22ec55caa690",
        "type": "json",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 640,
        "wires": [
            [
                "87259c5edfaa32b7",
                "5c7f696f3e5f40e6"
            ]
        ]
    },
    {
        "id": "150a290b7a18dedf",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "CO2Show",
        "query": "SELECT * FROM gases;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "361bef8eb188cb00"
            ]
        ]
    },
    {
        "id": "361bef8eb188cb00",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 640,
        "wires": []
    },
    {
        "id": "87259c5edfaa32b7",
        "type": "switch",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "400",
                "vt": "num",
                "v2": "1000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1001",
                "vt": "num",
                "v2": "2000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "2001",
                "vt": "num",
                "v2": "5000",
                "v2t": "num"
            },
            {
                "t": "gt",
                "v": "5000",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 330,
        "y": 880,
        "wires": [
            [
                "2ab4b40aed9e64fd"
            ],
            [
                "80d6e131d5657737"
            ],
            [
                "c3bfe2762c7a3f15"
            ],
            [
                "ceefb0269705b2cd"
            ]
        ]
    },
    {
        "id": "76ddfd47785bf031",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 720,
        "wires": []
    },
    {
        "id": "2ab4b40aed9e64fd",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "msg.payload = \"Safe level of CO2\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 740,
        "wires": [
            [
                "76ddfd47785bf031"
            ]
        ]
    },
    {
        "id": "8aa5e17b2d354ae2",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 780,
        "wires": []
    },
    {
        "id": "80d6e131d5657737",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \" Poor air detected in room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 820,
        "wires": [
            [
                "8aa5e17b2d354ae2",
                "ddd378dd3ef65ec8"
            ]
        ]
    },
    {
        "id": "ddd378dd3ef65ec8",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO2",
        "emojiIcon": "⚠️ ",
        "channel": "",
        "x": 770,
        "y": 840,
        "wires": []
    },
    {
        "id": "f9b7beaaf99fad22",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 940,
        "wires": []
    },
    {
        "id": "c3bfe2762c7a3f15",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \" Very poor air detected! Loss of attention, increased heart rate and slight nausea may be present. Room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "f9b7beaaf99fad22",
                "47c040bce227b38b"
            ]
        ]
    },
    {
        "id": "47c040bce227b38b",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO2",
        "emojiIcon": " ⚠️",
        "channel": "",
        "x": 770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e1a597e2b6ae10fa",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ceefb0269705b2cd",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \"SOS! VERY HIGH LEVELS OF CO2! LEAVE THE HOUSE! ROOM:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "e1a597e2b6ae10fa",
                "a5745207d6fba292"
            ]
        ]
    },
    {
        "id": "a5745207d6fba292",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO2",
        "emojiIcon": " ⚠️",
        "channel": "",
        "x": 770,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8627a8950b5fa405",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO",
        "emojiIcon": "⚠️",
        "channel": "",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "5c7f696f3e5f40e6",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "CO2Insert",
        "query": "INSERT INTO gases (time, value,room,gas_type)\nVALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.value}}},'{{{msg.payload.room}}}','{{{msg.payload.gas_type}}}' );\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 490,
        "y": 640,
        "wires": [
            [
                "150a290b7a18dedf"
            ]
        ]
    },
    {
        "id": "5b6defc9693b1f15",
        "type": "mqtt in",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "topic": "topic/thermostat",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "f4a9130bf78665f2"
            ]
        ]
    },
    {
        "id": "f4a9130bf78665f2",
        "type": "json",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "f32743ded59f634e",
                "1223dcb8efebf5db",
                "79e7f0abc0311b11"
            ]
        ]
    },
    {
        "id": "f32743ded59f634e",
        "type": "switch",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "property": "payload.temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "30",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 180,
        "wires": [
            [
                "65d7f58d3907fd53"
            ],
            [
                "7f79f6146bfa14f5"
            ]
        ]
    },
    {
        "id": "ba79f4fc8b298492",
        "type": "debug",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 160,
        "wires": []
    },
    {
        "id": "984bcdfb0fa7961c",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.payload = \"Temperature has increased 30 °C! Too warm! \"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 340,
        "wires": [
            [
                "ba79f4fc8b298492",
                "38d2a08c5a466c7e"
            ]
        ]
    },
    {
        "id": "280432fd9d9ec044",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.payload = \"Temperature is less than 7 °C! Too cold! \"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 160,
        "wires": [
            [
                "ba79f4fc8b298492",
                "0ec27624a63c9f3a"
            ]
        ]
    },
    {
        "id": "38d2a08c5a466c7e",
        "type": "slack",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Heat",
        "emojiIcon": "🥵",
        "channel": "",
        "x": 1590,
        "y": 340,
        "wires": []
    },
    {
        "id": "0ec27624a63c9f3a",
        "type": "slack",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Cold",
        "emojiIcon": "🥶",
        "channel": "",
        "x": 1630,
        "y": 80,
        "wires": []
    },
    {
        "id": "1223dcb8efebf5db",
        "type": "postgresql",
        "z": "1feb7a8dcb9365da",
        "name": "ThermostatInsert",
        "query": "insert into thermostat (time, temperature, state)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.temperature}}},\n{{{msg.payload.state}}}\n)",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4b7ebeea453e97cf",
        "type": "mqtt in",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "topic": "topic/present",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 340,
        "wires": [
            [
                "7352f14057426705"
            ]
        ]
    },
    {
        "id": "7352f14057426705",
        "type": "json",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "dd870c3e343ea6e2"
            ]
        ]
    },
    {
        "id": "dd870c3e343ea6e2",
        "type": "switch",
        "z": "1feb7a8dcb9365da",
        "name": "check if motion is detected",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 540,
        "y": 340,
        "wires": [
            [
                "0bff7efdc28d6685"
            ]
        ]
    },
    {
        "id": "0bff7efdc28d6685",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.topic = 'motion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 340,
        "wires": [
            [
                "d5a9fed67552d80b",
                "91220507a4e58ecf"
            ]
        ]
    },
    {
        "id": "d5a9fed67552d80b",
        "type": "join",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 160,
        "wires": [
            [
                "280432fd9d9ec044"
            ]
        ]
    },
    {
        "id": "65d7f58d3907fd53",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.topic = 'cold'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 160,
        "wires": [
            [
                "d5a9fed67552d80b"
            ]
        ]
    },
    {
        "id": "7f79f6146bfa14f5",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.topic = 'hot'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 220,
        "wires": [
            [
                "91220507a4e58ecf"
            ]
        ]
    },
    {
        "id": "91220507a4e58ecf",
        "type": "join",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "984bcdfb0fa7961c"
            ]
        ]
    },
    {
        "id": "79e7f0abc0311b11",
        "type": "debug",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "53553bf278aa0af9",
        "type": "mqtt in",
        "z": "80e237835e31d8fa",
        "name": "",
        "topic": "topic/lights",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 180,
        "wires": [
            [
                "995795556d99a676",
                "2b214eb7876c3890"
            ]
        ]
    },
    {
        "id": "995795556d99a676",
        "type": "json",
        "z": "80e237835e31d8fa",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "b20e1803d77e45ac",
                "64dda6acdf580dad"
            ]
        ]
    },
    {
        "id": "b20e1803d77e45ac",
        "type": "postgresql",
        "z": "80e237835e31d8fa",
        "name": "LightInsert",
        "query": "INSERT INTO lights (room, time, state) VALUES ('{{{msg.payload.room}}}','{{{msg.payload.time}}}',\n{{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 790,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "64dda6acdf580dad",
        "type": "debug",
        "z": "80e237835e31d8fa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "2b214eb7876c3890",
        "type": "debug",
        "z": "80e237835e31d8fa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "38df9b7394cbad1a",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/doorbell",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "52d257925f297a72"
            ]
        ]
    },
    {
        "id": "52d257925f297a72",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "8e5d0f8018b83a57",
                "51eb813af3d999a4",
                "9e6dec996fc2cbbf"
            ]
        ]
    },
    {
        "id": "8e5d0f8018b83a57",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "DoorbellInsert",
        "query": "INSERT INTO doorbell (time, state) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "51eb813af3d999a4",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "a00c47eb5a4d1538",
        "type": "slack",
        "z": "5813bec09aa8d7a8",
        "name": "doorbell",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "Doorbell",
        "emojiIcon": "🔔",
        "channel": "",
        "x": 640,
        "y": 200,
        "wires": []
    },
    {
        "id": "9e6dec996fc2cbbf",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var mes1 = {};\nmes1.payload = \"Doorbell is ringing!\";\nreturn mes1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            [
                "a00c47eb5a4d1538"
            ]
        ]
    },
    {
        "id": "68ab63d5cca0ca46",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/fridgedoor",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 460,
        "wires": [
            [
                "fbd79a4314eda0e6",
                "95b14cac024bb104"
            ]
        ]
    },
    {
        "id": "16552fc588db423c",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "bc280e977046be64",
                "84781e0eb7d1fde1"
            ]
        ]
    },
    {
        "id": "bc280e977046be64",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "FridgeInsert",
        "query": "INSERT INTO FridgeDoor (time, state) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "29d66ec68a71e3e2"
            ]
        ]
    },
    {
        "id": "29d66ec68a71e3e2",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "FridgeShow",
        "query": "SELECT * FROM FridgeDoor\nORDER BY time;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "2253c09b0fa174e4"
            ]
        ]
    },
    {
        "id": "2253c09b0fa174e4",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 400,
        "wires": []
    },
    {
        "id": "fbd79a4314eda0e6",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Fridge Previous Value",
        "query": "SELECT state FROM FridgeDoor\nORDER BY time DESC\nLIMIT 1;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 380,
        "y": 640,
        "wires": [
            [
                "626770f473ff7377"
            ]
        ]
    },
    {
        "id": "84781e0eb7d1fde1",
        "type": "switch",
        "z": "5813bec09aa8d7a8",
        "name": "check if door is open now",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 520,
        "wires": [
            [
                "4b999b0e568e06b9"
            ]
        ]
    },
    {
        "id": "848bf16dc3d27e61",
        "type": "join",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "b14947ae4141f12c"
            ]
        ]
    },
    {
        "id": "27277e2529c36a81",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 700,
        "wires": []
    },
    {
        "id": "626770f473ff7377",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 640,
        "wires": [
            [
                "d2345432205071c9"
            ]
        ]
    },
    {
        "id": "d2345432205071c9",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var msg1 =  msg.payload;\nvar temp = msg1.split(\":\")[1]\nvar result = {payload: parseInt(temp.substring(0,1))}\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 740,
        "wires": [
            [
                "0241b6e9095a1817"
            ]
        ]
    },
    {
        "id": "0241b6e9095a1817",
        "type": "switch",
        "z": "5813bec09aa8d7a8",
        "name": "check if door was open and ten minutes ago",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 820,
        "wires": [
            [
                "abf200cef53613f4"
            ]
        ]
    },
    {
        "id": "7b3fead4b2dcf47c",
        "type": "comment",
        "z": "5813bec09aa8d7a8",
        "name": "Select the latest record ",
        "info": "",
        "x": 340,
        "y": 700,
        "wires": []
    },
    {
        "id": "4b999b0e568e06b9",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "msg.topic = 'fridgedoor1'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 520,
        "wires": [
            [
                "848bf16dc3d27e61"
            ]
        ]
    },
    {
        "id": "abf200cef53613f4",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "msg.topic = 'fridgedoor2'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 740,
        "wires": [
            [
                "848bf16dc3d27e61"
            ]
        ]
    },
    {
        "id": "b14947ae4141f12c",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "msg.payload = 'The fridge door may be open for several minutes.'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 620,
        "wires": [
            [
                "27277e2529c36a81",
                "f2f086252fc4d8d2"
            ]
        ]
    },
    {
        "id": "95b14cac024bb104",
        "type": "delay",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 400,
        "wires": [
            [
                "16552fc588db423c"
            ]
        ]
    },
    {
        "id": "f2f086252fc4d8d2",
        "type": "slack",
        "z": "5813bec09aa8d7a8",
        "name": "fridgedoor",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Fridge Door",
        "emojiIcon": "🥶",
        "channel": "",
        "x": 1340,
        "y": 620,
        "wires": []
    },
    {
        "id": "4e2cb6cfd6e6e728",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/oven",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1120,
        "wires": [
            [
                "53b1b80da3a7fa6b"
            ]
        ]
    },
    {
        "id": "f88a1db908b10bbc",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Device Insert",
        "query": "INSERT INTO devices (time, device, state ) VALUES ('{{{msg.payload.time}}}',\n'{{{msg.payload.device}}}', {{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "53b1b80da3a7fa6b",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 1120,
        "wires": [
            [
                "f88a1db908b10bbc",
                "bac1fc299e2dd2c3",
                "89cf88abfbc552cd"
            ]
        ]
    },
    {
        "id": "b897c087a14c6205",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var msg1 = {}\nmsg.payload = msg.payload.time\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1000,
        "wires": [
            [
                "6aca2f7366c2d632"
            ]
        ]
    },
    {
        "id": "6aca2f7366c2d632",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Present Check",
        "query": "SELECT * FROM present\nWHERE time = '{{{msg.payload}}}'",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 840,
        "y": 980,
        "wires": [
            [
                "da345f56dcd364bb"
            ]
        ]
    },
    {
        "id": "da345f56dcd364bb",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var msg1 = {}\n\n    \nif(typeof msg.payload[0] !== 'undefined') {\n    msg1.payload = msg.payload[0].state\n    if(msg.payload[0].state == 0){ // no one is in the house\n        return msg1;\n    }\n    \n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 980,
        "wires": [
            [
                "f348479af6fc39b6"
            ]
        ]
    },
    {
        "id": "bac1fc299e2dd2c3",
        "type": "switch",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1040,
        "wires": [
            [
                "b897c087a14c6205"
            ]
        ]
    },
    {
        "id": "f348479af6fc39b6",
        "type": "switch",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "2ac0ab3905973fb7"
            ]
        ]
    },
    {
        "id": "73b3d0919dae2a60",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d50a211966587d5b",
        "type": "slack",
        "z": "5813bec09aa8d7a8",
        "name": "oven",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "Oven",
        "emojiIcon": "🎛",
        "channel": "",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2ac0ab3905973fb7",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var mes1 = {};\nmes1.payload = \"Oven is open and no one is in the house!\";\nreturn mes1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1080,
        "wires": [
            [
                "d50a211966587d5b",
                "73b3d0919dae2a60"
            ]
        ]
    },
    {
        "id": "100d59d3477ae5c7",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/faucet",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1400,
        "wires": [
            [
                "8abec15bc15b3f78"
            ]
        ]
    },
    {
        "id": "61c56d94a7a37e15",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Device Insert",
        "query": "INSERT INTO devices (time, device, state ) VALUES ('{{{msg.payload.time}}}',\n'{{{msg.payload.device}}}', {{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "8abec15bc15b3f78",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 1400,
        "wires": [
            [
                "61c56d94a7a37e15",
                "599560a469870d5a"
            ]
        ]
    },
    {
        "id": "387bcc617b1a4708",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var msg1 = {}\nmsg.payload = msg.payload.time\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1280,
        "wires": [
            [
                "c47578f8ad3ab70e"
            ]
        ]
    },
    {
        "id": "c47578f8ad3ab70e",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Present Check",
        "query": "SELECT * FROM present\nWHERE time = '{{{msg.payload}}}'",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 840,
        "y": 1260,
        "wires": [
            [
                "bc3025a2f9a5a5b7"
            ]
        ]
    },
    {
        "id": "bc3025a2f9a5a5b7",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var msg1 = {}\n\n    \nif(typeof msg.payload[0] !== 'undefined') {\n    msg1.payload = msg.payload[0].state\n    if(msg.payload[0].state == 0){ // no one is in the house\n        return msg1;\n    }\n    \n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1260,
        "wires": [
            [
                "3663bd70a6195dde"
            ]
        ]
    },
    {
        "id": "599560a469870d5a",
        "type": "switch",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1320,
        "wires": [
            [
                "387bcc617b1a4708"
            ]
        ]
    },
    {
        "id": "3663bd70a6195dde",
        "type": "switch",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 1360,
        "wires": [
            [
                "bac4e8618365a94b"
            ]
        ]
    },
    {
        "id": "db6925e1c2f00175",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9c693c154edae593",
        "type": "slack",
        "z": "5813bec09aa8d7a8",
        "name": "faucet",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "Faucet",
        "emojiIcon": "🚰",
        "channel": "",
        "x": 1050,
        "y": 1360,
        "wires": []
    },
    {
        "id": "bac4e8618365a94b",
        "type": "function",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "func": "var mes1 = {};\nmes1.payload = \"Oven is open and no one is in the house!\";\nreturn mes1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1360,
        "wires": [
            [
                "9c693c154edae593",
                "db6925e1c2f00175"
            ]
        ]
    },
    {
        "id": "ad85a7e5e363a03e",
        "type": "comment",
        "z": "5813bec09aa8d7a8",
        "name": "Check if oven or any faucet is open while no one is in the house",
        "info": "",
        "x": 730,
        "y": 900,
        "wires": []
    },
    {
        "id": "88933c639c859e8d",
        "type": "comment",
        "z": "5813bec09aa8d7a8",
        "name": "Check if doorbell is ringing",
        "info": "",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "60c5080fe71f04fc",
        "type": "comment",
        "z": "5813bec09aa8d7a8",
        "name": "Check if fridgedoor is left open for a lot of minutes",
        "info": "",
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "89cf88abfbc552cd",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1260,
        "wires": []
    },
    {
        "id": "015dcef7b0bd5eef",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/tv",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1600,
        "wires": [
            [
                "ec365c51e1615fc6"
            ]
        ]
    },
    {
        "id": "78e95ee5cfbe5551",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Device Insert",
        "query": "INSERT INTO devices (time, device, state ) VALUES ('{{{msg.payload.time}}}',\n'{{{msg.payload.device}}}', {{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 490,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "ec365c51e1615fc6",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 1600,
        "wires": [
            [
                "78e95ee5cfbe5551",
                "f43a67054d50a2ff"
            ]
        ]
    },
    {
        "id": "aa779b05507d9605",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/radio",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 700,
        "y": 1600,
        "wires": [
            [
                "2b43edd41e7a616c"
            ]
        ]
    },
    {
        "id": "fc32680f5bd3d556",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Device Insert",
        "query": "INSERT INTO devices (time, device, state ) VALUES ('{{{msg.payload.time}}}',\n'{{{msg.payload.device}}}', {{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1090,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "2b43edd41e7a616c",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 1600,
        "wires": [
            [
                "fc32680f5bd3d556",
                "105fbe0f8bbe9974"
            ]
        ]
    },
    {
        "id": "25cb6659a5fcd6ad",
        "type": "mqtt in",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "topic": "topic/coffee_maker",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1330,
        "y": 1600,
        "wires": [
            [
                "34cc393e9a227e6a"
            ]
        ]
    },
    {
        "id": "46f30dba07960d4b",
        "type": "postgresql",
        "z": "5813bec09aa8d7a8",
        "name": "Device Insert",
        "query": "INSERT INTO devices (time, device, state ) VALUES ('{{{msg.payload.time}}}',\n'{{{msg.payload.device}}}', {{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1670,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "34cc393e9a227e6a",
        "type": "json",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 1600,
        "wires": [
            [
                "46f30dba07960d4b",
                "291fcabb0e5f86c3"
            ]
        ]
    },
    {
        "id": "4e7edc21f7f70fc5",
        "type": "comment",
        "z": "5813bec09aa8d7a8",
        "name": "Save states of television, radio and coffee_maker",
        "info": "",
        "x": 800,
        "y": 1540,
        "wires": []
    },
    {
        "id": "f43a67054d50a2ff",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1700,
        "wires": []
    },
    {
        "id": "105fbe0f8bbe9974",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1740,
        "wires": []
    },
    {
        "id": "291fcabb0e5f86c3",
        "type": "debug",
        "z": "5813bec09aa8d7a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 1700,
        "wires": []
    },
    {
        "id": "bd69bf700a25eef2",
        "type": "mqtt in",
        "z": "a8273586a153c2d0",
        "name": "",
        "topic": "topic/boiler",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "6faa61a6dd42353b"
            ]
        ]
    },
    {
        "id": "6faa61a6dd42353b",
        "type": "json",
        "z": "a8273586a153c2d0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "801565a2b5735270",
                "c7c0f23db1673e52",
                "7d8113b5a2a30753"
            ]
        ]
    },
    {
        "id": "801565a2b5735270",
        "type": "switch",
        "z": "a8273586a153c2d0",
        "name": "temperature",
        "property": "payload.temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "90",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "71985a4a19da8ce9"
            ]
        ]
    },
    {
        "id": "bcf42b9035389245",
        "type": "debug",
        "z": "a8273586a153c2d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 60,
        "wires": []
    },
    {
        "id": "71985a4a19da8ce9",
        "type": "function",
        "z": "a8273586a153c2d0",
        "name": "",
        "func": "msg.payload = \"Temperature of oil boiler is very high!\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 80,
        "wires": [
            [
                "bcf42b9035389245",
                "579b6549409d262b"
            ]
        ]
    },
    {
        "id": "579b6549409d262b",
        "type": "slack",
        "z": "a8273586a153c2d0",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "Oil Boiler",
        "emojiIcon": "",
        "channel": "",
        "x": 910,
        "y": 120,
        "wires": []
    },
    {
        "id": "c7c0f23db1673e52",
        "type": "postgresql",
        "z": "a8273586a153c2d0",
        "name": "BoilerInsert",
        "query": "insert into energy (time, temperature,capacity, energy_type, consumption)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.temperature}}},\n{{{msg.payload.capacity}}}, '{{{msg.payload.energy_type}}}' , NULL);",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 470,
        "y": 340,
        "wires": [
            [
                "5920c2849e372978"
            ]
        ]
    },
    {
        "id": "5920c2849e372978",
        "type": "postgresql",
        "z": "a8273586a153c2d0",
        "name": "BoilerShow",
        "query": "SELECT * FROM energy;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "23aaab46de6e6f4d"
            ]
        ]
    },
    {
        "id": "7d8113b5a2a30753",
        "type": "switch",
        "z": "a8273586a153c2d0",
        "name": "capacity",
        "property": "payload.capacity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "40",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "bbfd08bbc4d3254a"
            ]
        ]
    },
    {
        "id": "bfe55333c60cce48",
        "type": "debug",
        "z": "a8273586a153c2d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 200,
        "wires": []
    },
    {
        "id": "bbfd08bbc4d3254a",
        "type": "function",
        "z": "a8273586a153c2d0",
        "name": "",
        "func": "msg.payload = \"Capacity of oil boiler is low!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 220,
        "wires": [
            [
                "bfe55333c60cce48",
                "1251504320a14baf"
            ]
        ]
    },
    {
        "id": "1251504320a14baf",
        "type": "slack",
        "z": "a8273586a153c2d0",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "Oil Boiler",
        "emojiIcon": "",
        "channel": "",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "23aaab46de6e6f4d",
        "type": "debug",
        "z": "a8273586a153c2d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "3d821e82acd4edee",
        "type": "mqtt in",
        "z": "a8273586a153c2d0",
        "name": "",
        "topic": "topic/power",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "b136c7b73e4de76b"
            ]
        ]
    },
    {
        "id": "b136c7b73e4de76b",
        "type": "json",
        "z": "a8273586a153c2d0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "f43d9701b51bf62e"
            ]
        ]
    },
    {
        "id": "f43d9701b51bf62e",
        "type": "postgresql",
        "z": "a8273586a153c2d0",
        "name": "Power Insert",
        "query": "insert into energy (time, temperature,capacity, energy_type, consumption)\nvalues ('{{{msg.payload.time}}}', NULL,\nNULL, '{{{msg.payload.energy_type}}}' , {{{msg.payload.consumption}}});",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "96b6d03064ec8d73"
            ]
        ]
    },
    {
        "id": "96b6d03064ec8d73",
        "type": "postgresql",
        "z": "a8273586a153c2d0",
        "name": "Power Show",
        "query": "SELECT * FROM energy;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "5e0e13c49fe8d98c"
            ]
        ]
    },
    {
        "id": "5e0e13c49fe8d98c",
        "type": "debug",
        "z": "a8273586a153c2d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 460,
        "wires": []
    }
]
