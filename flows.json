[
    {
        "id": "93572a9c83e7ad1b",
        "type": "tab",
        "label": "Alarm",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e07bf159b6147f4a",
        "type": "tab",
        "label": "Fridge Door",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "67745ff5740502f8",
        "type": "tab",
        "label": "Gases",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1feb7a8dcb9365da",
        "type": "tab",
        "label": "Heat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "80e237835e31d8fa",
        "type": "tab",
        "label": "Lights",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9d7704be57c4957b",
        "type": "tab",
        "label": "Central Door Lock",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "010e84cda878a155",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a0207de35fd24b6d",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "506cc9ad47525aac",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5f04c3706f7a4c9c",
        "type": "ui_group",
        "name": "Default",
        "tab": "a0207de35fd24b6d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e3ffd5e15083fcd3",
        "type": "postgreSQLConfig",
        "name": "pgServer",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "nafsi",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "nafsi",
        "userFieldType": "str",
        "password": "58513nafsi",
        "passwordFieldType": "str"
    },
    {
        "id": "8fd5e4bbc7afea3d",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/window",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e09a10dfb2627b40"
            ]
        ]
    },
    {
        "id": "e09a10dfb2627b40",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "29c3e8dfaf22f24d",
                "5d3aa3b4baece032"
            ]
        ]
    },
    {
        "id": "29c3e8dfaf22f24d",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "WindowStateInsert",
        "query": "insert into windows (time, isopen, room)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.isopen}}}, '{{{msg.payload.room}}}')",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 490,
        "y": 80,
        "wires": [
            [
                "d47cf527168a14d4"
            ]
        ]
    },
    {
        "id": "d47cf527168a14d4",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "WindowShow",
        "query": "SELECT * FROM windows;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 740,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3aa3b4baece032",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if window is open",
        "property": "payload.isopen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "12f8ee922032831f"
            ]
        ]
    },
    {
        "id": "10a3ca46af39fb41",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/alarm",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 440,
        "wires": [
            [
                "5f758b8c3cc3fbbb"
            ]
        ]
    },
    {
        "id": "5f758b8c3cc3fbbb",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "95e35240147a2130",
                "2cf41f546b09cf73"
            ]
        ]
    },
    {
        "id": "95e35240147a2130",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "AlarmInsert",
        "query": "INSERT INTO alarm (time, isopen) VALUES (\n'{{{msg.payload.time}}}' \n,{{{msg.payload.isopen}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "24ef179231d2eb88"
            ]
        ]
    },
    {
        "id": "24ef179231d2eb88",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "AlarmShow",
        "query": "SELECT * FROM alarm;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 650,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "2cf41f546b09cf73",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if alarm is open",
        "property": "payload.isopen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 400,
        "wires": [
            [
                "36569431d8f14511"
            ]
        ]
    },
    {
        "id": "1e4bf634a5bd7077",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 200,
        "wires": []
    },
    {
        "id": "1ce79201f51991c6",
        "type": "join",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 890,
        "y": 220,
        "wires": [
            [
                "f411922cddf6f512"
            ]
        ]
    },
    {
        "id": "12f8ee922032831f",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'window'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 220,
        "wires": [
            [
                "1ce79201f51991c6"
            ]
        ]
    },
    {
        "id": "36569431d8f14511",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'alarm'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 340,
        "wires": [
            [
                "1ce79201f51991c6",
                "3a52c235cb07cbec",
                "a2a8837ecd8568b4"
            ]
        ]
    },
    {
        "id": "f411922cddf6f512",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "\n\nvar mes1 = \"Window detected open while alarm is ON in room: \"\n\nmsg= { payload: msg.payload.window.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(msg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "1e4bf634a5bd7077"
            ]
        ]
    },
    {
        "id": "eebca4e980e8c98f",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/door",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 660,
        "wires": [
            [
                "64a1b9fb78619fd9"
            ]
        ]
    },
    {
        "id": "64a1b9fb78619fd9",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 660,
        "wires": [
            [
                "bb444dcca0016bf4",
                "093c8bc7aa607fb6"
            ]
        ]
    },
    {
        "id": "bb444dcca0016bf4",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "DoorInsert",
        "query": "insert into door (time, state, room)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.state}}}, '{{{msg.payload.room}}}')",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 800,
        "wires": [
            [
                "ad504af423281a7a"
            ]
        ]
    },
    {
        "id": "ad504af423281a7a",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "DoorsShow",
        "query": "SELECT * FROM door;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 770,
        "y": 800,
        "wires": [
            [
                "9c2e8a05e38a9594"
            ]
        ]
    },
    {
        "id": "9c2e8a05e38a9594",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 800,
        "wires": []
    },
    {
        "id": "3a52c235cb07cbec",
        "type": "join",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "1d648a518b3777a0"
            ]
        ]
    },
    {
        "id": "94b8dad801602539",
        "type": "comment",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "info": "Check if any window is open while alarm is ON.",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "786ea255ecaeb4bd",
        "type": "comment",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "info": "Check if any balcony or central or garage door is open while alarm is ON.",
        "x": 980,
        "y": 380,
        "wires": []
    },
    {
        "id": "efc25b08e4aacd01",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if door is open",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 680,
        "wires": [
            [
                "aa98705e68d4314c"
            ]
        ]
    },
    {
        "id": "093c8bc7aa607fb6",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check type of door",
        "property": "payload.room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "garage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "balcony",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "central",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 520,
        "y": 680,
        "wires": [
            [
                "efc25b08e4aacd01"
            ],
            [
                "efc25b08e4aacd01"
            ],
            [
                "efc25b08e4aacd01"
            ]
        ]
    },
    {
        "id": "aa98705e68d4314c",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'door'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 640,
        "wires": [
            [
                "3a52c235cb07cbec"
            ]
        ]
    },
    {
        "id": "bdccf42046d09e2b",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 700,
        "wires": []
    },
    {
        "id": "1d648a518b3777a0",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "\nvar mes1 = \"Door detected open while alarm is ON in : \"\n\nmsg= { payload: msg.payload.door.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(msg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 600,
        "wires": [
            [
                "bdccf42046d09e2b",
                "ebe26d72d2c77c15"
            ]
        ]
    },
    {
        "id": "ebe26d72d2c77c15",
        "type": "slack",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Door",
        "emojiIcon": " ",
        "channel": "",
        "x": 1330,
        "y": 560,
        "wires": []
    },
    {
        "id": "960520f4795f322b",
        "type": "mqtt in",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "topic": "topic/motion",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 920,
        "wires": [
            [
                "b068505f461e4dd2"
            ]
        ]
    },
    {
        "id": "b068505f461e4dd2",
        "type": "json",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 920,
        "wires": [
            [
                "40bbb5a7a247fe18",
                "0b89e9dcfe284750"
            ]
        ]
    },
    {
        "id": "40bbb5a7a247fe18",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "MotionStateInsert",
        "query": "insert into motion (time, state, room)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.state}}}, '{{{msg.payload.room}}}')",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 490,
        "y": 920,
        "wires": [
            [
                "8501bed6bfac4757"
            ]
        ]
    },
    {
        "id": "8501bed6bfac4757",
        "type": "postgresql",
        "z": "93572a9c83e7ad1b",
        "name": "MotionShow",
        "query": "SELECT * FROM motion;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 730,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "0b89e9dcfe284750",
        "type": "switch",
        "z": "93572a9c83e7ad1b",
        "name": "check if motion is detected",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1040,
        "wires": [
            [
                "799e3138ee0cead9"
            ]
        ]
    },
    {
        "id": "799e3138ee0cead9",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "msg.topic = 'motion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "a2a8837ecd8568b4"
            ]
        ]
    },
    {
        "id": "a2a8837ecd8568b4",
        "type": "join",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 940,
        "y": 980,
        "wires": [
            [
                "aee71c45fe8afccc"
            ]
        ]
    },
    {
        "id": "fa21aad8f65d0d35",
        "type": "debug",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 980,
        "wires": []
    },
    {
        "id": "aee71c45fe8afccc",
        "type": "function",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "func": "\n\nvar mes1 = \"Motion detected open while alarm is ON in room: \"\n\nmsg= { payload: msg.payload.motion.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(msg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 980,
        "wires": [
            [
                "fa21aad8f65d0d35",
                "bead5b539a8586b0"
            ]
        ]
    },
    {
        "id": "bead5b539a8586b0",
        "type": "slack",
        "z": "93572a9c83e7ad1b",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Motion",
        "emojiIcon": " ",
        "channel": "",
        "x": 1230,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4a02658f438076d8",
        "type": "mqtt in",
        "z": "e07bf159b6147f4a",
        "name": "",
        "topic": "topic/fridgedoor",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "f707d192f2c58119",
                "2111eadf3d87fb0a"
            ]
        ]
    },
    {
        "id": "21070cccae2b8e88",
        "type": "json",
        "z": "e07bf159b6147f4a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 40,
        "wires": [
            [
                "cc294afb90f0b56e",
                "f02d3c28dc674cf9"
            ]
        ]
    },
    {
        "id": "cc294afb90f0b56e",
        "type": "postgresql",
        "z": "e07bf159b6147f4a",
        "name": "FridgeInsert",
        "query": "INSERT INTO FridgeDoor (time, state) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 830,
        "y": 40,
        "wires": [
            [
                "a7385cc9f836adf5"
            ]
        ]
    },
    {
        "id": "a7385cc9f836adf5",
        "type": "postgresql",
        "z": "e07bf159b6147f4a",
        "name": "FridgeShow",
        "query": "SELECT * FROM FridgeDoor\nORDER BY time;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1090,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4178108df7608f36",
        "type": "debug",
        "z": "e07bf159b6147f4a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 40,
        "wires": []
    },
    {
        "id": "f707d192f2c58119",
        "type": "postgresql",
        "z": "e07bf159b6147f4a",
        "name": "Fridge Previous 10 min Value",
        "query": "SELECT state FROM FridgeDoor\nORDER BY time DESC\nLIMIT 1;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "ba11c86d70f74522"
            ]
        ]
    },
    {
        "id": "f02d3c28dc674cf9",
        "type": "switch",
        "z": "e07bf159b6147f4a",
        "name": "check if door is open now",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 160,
        "wires": [
            [
                "5e2119489872d5a0"
            ]
        ]
    },
    {
        "id": "f4f965e17ed44bea",
        "type": "join",
        "z": "e07bf159b6147f4a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "987fb2b23a79efd6"
            ]
        ]
    },
    {
        "id": "49042f99184d78e9",
        "type": "debug",
        "z": "e07bf159b6147f4a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 240,
        "wires": []
    },
    {
        "id": "ba11c86d70f74522",
        "type": "json",
        "z": "e07bf159b6147f4a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "1de745fae3658d26"
            ]
        ]
    },
    {
        "id": "1de745fae3658d26",
        "type": "function",
        "z": "e07bf159b6147f4a",
        "name": "",
        "func": "var msg1 =  msg.payload;\nvar temp = msg1.split(\":\")[1]\nvar result = {payload: parseInt(temp.substring(0,1))}\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 280,
        "wires": [
            [
                "3da28b92125ebf3b"
            ]
        ]
    },
    {
        "id": "3da28b92125ebf3b",
        "type": "switch",
        "z": "e07bf159b6147f4a",
        "name": "check if door was open and ten minutes ago",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 360,
        "wires": [
            [
                "229d8f33f96088a7"
            ]
        ]
    },
    {
        "id": "da0174dfe14affad",
        "type": "comment",
        "z": "e07bf159b6147f4a",
        "name": "",
        "info": "Select the latest record (10 min ago) from database and keep the state column, to check whether the fridge door is still open or not.",
        "x": 300,
        "y": 340,
        "wires": []
    },
    {
        "id": "5e2119489872d5a0",
        "type": "function",
        "z": "e07bf159b6147f4a",
        "name": "",
        "func": "msg.topic = 'fridgedoor1'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 160,
        "wires": [
            [
                "f4f965e17ed44bea"
            ]
        ]
    },
    {
        "id": "229d8f33f96088a7",
        "type": "function",
        "z": "e07bf159b6147f4a",
        "name": "",
        "func": "msg.topic = 'fridgedoor2'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "f4f965e17ed44bea"
            ]
        ]
    },
    {
        "id": "987fb2b23a79efd6",
        "type": "function",
        "z": "e07bf159b6147f4a",
        "name": "",
        "func": "msg.payload = 'The fridge door may be open for several minutes.'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 180,
        "wires": [
            [
                "49042f99184d78e9",
                "0bd98d2e23d08681"
            ]
        ]
    },
    {
        "id": "2111eadf3d87fb0a",
        "type": "delay",
        "z": "e07bf159b6147f4a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 40,
        "wires": [
            [
                "21070cccae2b8e88"
            ]
        ]
    },
    {
        "id": "0bd98d2e23d08681",
        "type": "slack",
        "z": "e07bf159b6147f4a",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Fridge Door",
        "emojiIcon": "",
        "channel": "",
        "x": 1510,
        "y": 180,
        "wires": []
    },
    {
        "id": "81eea99c48df43c8",
        "type": "mqtt in",
        "z": "67745ff5740502f8",
        "name": "",
        "topic": "topic/smoke",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "e39252131105e271"
            ]
        ]
    },
    {
        "id": "e39252131105e271",
        "type": "json",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "2827eccb9c054d6e",
                "40cef62030951624"
            ]
        ]
    },
    {
        "id": "2827eccb9c054d6e",
        "type": "switch",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload.isdetected",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "09fbfec068798604"
            ]
        ]
    },
    {
        "id": "9d0c04df2901c6d1",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "09fbfec068798604",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \"SOS Smoke Detected in room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "9d0c04df2901c6d1",
                "ed1e6dfafa0597c0"
            ]
        ]
    },
    {
        "id": "40cef62030951624",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "SmokeInsert",
        "query": "INSERT INTO smoke (time, isdetected,room)\nVALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.isdetected}}},'{{{msg.payload.room}}}' );\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 120,
        "wires": [
            [
                "cdb81fd7440a1f94"
            ]
        ]
    },
    {
        "id": "cdb81fd7440a1f94",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "SmokeShow",
        "query": "SELECT * FROM smoke;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "7005e524bbd7f662"
            ]
        ]
    },
    {
        "id": "7005e524bbd7f662",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "ed1e6dfafa0597c0",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Smoke",
        "emojiIcon": "",
        "channel": "",
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "a8cd2acad7bd529a",
        "type": "mqtt in",
        "z": "67745ff5740502f8",
        "name": "",
        "topic": "topic/CO",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 380,
        "wires": [
            [
                "f369f812d8b3629f"
            ]
        ]
    },
    {
        "id": "f369f812d8b3629f",
        "type": "json",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "0407db3cabacdab1",
                "b9b50bc4928f613a"
            ]
        ]
    },
    {
        "id": "0407db3cabacdab1",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "COInsert",
        "query": "INSERT INTO CO (time, value, room) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.value}}},\n'{{{msg.payload.room}}}'\n);\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 380,
        "wires": [
            [
                "7ffd060929d4684d"
            ]
        ]
    },
    {
        "id": "7ffd060929d4684d",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "COShow",
        "query": "SELECT * FROM CO;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "904ab0fb727a3880"
            ]
        ]
    },
    {
        "id": "904ab0fb727a3880",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "b9b50bc4928f613a",
        "type": "switch",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "04723fad9cc3b59d"
            ]
        ]
    },
    {
        "id": "04723fad9cc3b59d",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \"SOS high CO concentration detected in room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 460,
        "wires": [
            [
                "9f7bfc47f4743159"
            ]
        ]
    },
    {
        "id": "9f7bfc47f4743159",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "92acde081e0e197f",
        "type": "mqtt in",
        "z": "67745ff5740502f8",
        "name": "",
        "topic": "topic/CO2",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 640,
        "wires": [
            [
                "4e6e22ec55caa690"
            ]
        ]
    },
    {
        "id": "4e6e22ec55caa690",
        "type": "json",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 640,
        "wires": [
            [
                "57bc1660dfdec734",
                "87259c5edfaa32b7"
            ]
        ]
    },
    {
        "id": "57bc1660dfdec734",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "CO2Insert",
        "query": "INSERT INTO CO2 (time, state, room) VALUES ('{{{msg.payload.time}}}',\n{{{msg.payload.state}}},\n'{{{msg.payload.room}}}'\n);\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 640,
        "wires": [
            [
                "150a290b7a18dedf"
            ]
        ]
    },
    {
        "id": "150a290b7a18dedf",
        "type": "postgresql",
        "z": "67745ff5740502f8",
        "name": "CO2Show",
        "query": "SELECT * FROM CO2;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "361bef8eb188cb00"
            ]
        ]
    },
    {
        "id": "361bef8eb188cb00",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 640,
        "wires": []
    },
    {
        "id": "87259c5edfaa32b7",
        "type": "switch",
        "z": "67745ff5740502f8",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "400",
                "vt": "num",
                "v2": "1000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1001",
                "vt": "num",
                "v2": "2000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "2001",
                "vt": "num",
                "v2": "5000",
                "v2t": "num"
            },
            {
                "t": "gt",
                "v": "5000",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 330,
        "y": 880,
        "wires": [
            [
                "2ab4b40aed9e64fd"
            ],
            [
                "80d6e131d5657737"
            ],
            [
                "c3bfe2762c7a3f15"
            ],
            [
                "ceefb0269705b2cd"
            ]
        ]
    },
    {
        "id": "76ddfd47785bf031",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 720,
        "wires": []
    },
    {
        "id": "2ab4b40aed9e64fd",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "msg.payload = \"Safe level of CO2\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 740,
        "wires": [
            [
                "76ddfd47785bf031"
            ]
        ]
    },
    {
        "id": "8aa5e17b2d354ae2",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 780,
        "wires": []
    },
    {
        "id": "80d6e131d5657737",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \" Poor air detected in room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 820,
        "wires": [
            [
                "8aa5e17b2d354ae2",
                "ddd378dd3ef65ec8"
            ]
        ]
    },
    {
        "id": "ddd378dd3ef65ec8",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO2",
        "emojiIcon": " ",
        "channel": "",
        "x": 770,
        "y": 840,
        "wires": []
    },
    {
        "id": "f9b7beaaf99fad22",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 940,
        "wires": []
    },
    {
        "id": "c3bfe2762c7a3f15",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \" Very poor air detected! Loss of attention, increased heart rate and slight nausea may be present. Room:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "f9b7beaaf99fad22",
                "47c040bce227b38b"
            ]
        ]
    },
    {
        "id": "47c040bce227b38b",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO2",
        "emojiIcon": " ",
        "channel": "",
        "x": 770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e1a597e2b6ae10fa",
        "type": "debug",
        "z": "67745ff5740502f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ceefb0269705b2cd",
        "type": "function",
        "z": "67745ff5740502f8",
        "name": "",
        "func": "var mes1 = \"SOS! VERY HIGH LEVELS OF CO2! LEAVE THE HOUSE! ROOM:\"\n\nvar newMsg = { payload: msg.payload.room };\n\nvar result = {};\n\nresult.payload = mes1.concat(JSON.stringify(newMsg.payload))\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "e1a597e2b6ae10fa",
                "a5745207d6fba292"
            ]
        ]
    },
    {
        "id": "a5745207d6fba292",
        "type": "slack",
        "z": "67745ff5740502f8",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - CO2",
        "emojiIcon": " ",
        "channel": "",
        "x": 770,
        "y": 1160,
        "wires": []
    },
    {
        "id": "5b6defc9693b1f15",
        "type": "mqtt in",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "topic": "topic/heat",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "f4a9130bf78665f2"
            ]
        ]
    },
    {
        "id": "f4a9130bf78665f2",
        "type": "json",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "601d641ae0964552",
                "f32743ded59f634e"
            ]
        ]
    },
    {
        "id": "601d641ae0964552",
        "type": "postgresql",
        "z": "1feb7a8dcb9365da",
        "name": "HeatInsert",
        "query": "INSERT INTO heat (temperature, time) VALUES ({{{msg.payload.temperature}}},'{{{msg.payload.time}}}');\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 510,
        "y": 100,
        "wires": [
            [
                "c18999fd955f3f8f"
            ]
        ]
    },
    {
        "id": "c18999fd955f3f8f",
        "type": "postgresql",
        "z": "1feb7a8dcb9365da",
        "name": "HeatShow",
        "query": "SELECT * FROM heat;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f32743ded59f634e",
        "type": "switch",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "property": "payload.temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "40",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "280432fd9d9ec044"
            ],
            [
                "984bcdfb0fa7961c"
            ]
        ]
    },
    {
        "id": "ba79f4fc8b298492",
        "type": "debug",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "984bcdfb0fa7961c",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.payload = \"Temperature has increased 40 °C! Too warm! \"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 260,
        "wires": [
            [
                "ba79f4fc8b298492",
                "38d2a08c5a466c7e"
            ]
        ]
    },
    {
        "id": "280432fd9d9ec044",
        "type": "function",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "func": "msg.payload = \"Temperature is less than 5 °C! Too cold! \"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "ba79f4fc8b298492",
                "38d2a08c5a466c7e"
            ]
        ]
    },
    {
        "id": "38d2a08c5a466c7e",
        "type": "slack",
        "z": "1feb7a8dcb9365da",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Heat",
        "emojiIcon": "",
        "channel": "",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "53553bf278aa0af9",
        "type": "mqtt in",
        "z": "80e237835e31d8fa",
        "name": "",
        "topic": "topic/lights",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "995795556d99a676"
            ]
        ]
    },
    {
        "id": "995795556d99a676",
        "type": "json",
        "z": "80e237835e31d8fa",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "b20e1803d77e45ac"
            ]
        ]
    },
    {
        "id": "b20e1803d77e45ac",
        "type": "postgresql",
        "z": "80e237835e31d8fa",
        "name": "Lightnsert",
        "query": "INSERT INTO lights (room, time, state) VALUES ('{{{msg.payload.room}}}','{{{msg.payload.time}}}',\n{{{msg.payload.state}}});\n",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "53bfbfb1b6016689"
            ]
        ]
    },
    {
        "id": "53bfbfb1b6016689",
        "type": "postgresql",
        "z": "80e237835e31d8fa",
        "name": "LIghtsShow",
        "query": "SELECT * FROM lights;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "64dda6acdf580dad"
            ]
        ]
    },
    {
        "id": "64dda6acdf580dad",
        "type": "debug",
        "z": "80e237835e31d8fa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "e5d5a5d6acda0613",
        "type": "mqtt in",
        "z": "9d7704be57c4957b",
        "name": "",
        "topic": "topic/lock",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "d157afbbe459923e"
            ]
        ]
    },
    {
        "id": "d157afbbe459923e",
        "type": "json",
        "z": "9d7704be57c4957b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "458422f67e11858c",
                "43218188dafe2a4f"
            ]
        ]
    },
    {
        "id": "458422f67e11858c",
        "type": "postgresql",
        "z": "9d7704be57c4957b",
        "name": "LockStateInsert",
        "query": "insert into central_door_lock (time, state)\nvalues ('{{{msg.payload.time}}}', {{{msg.payload.state}}})",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "c66ba9fe20c713e7"
            ]
        ]
    },
    {
        "id": "c66ba9fe20c713e7",
        "type": "postgresql",
        "z": "9d7704be57c4957b",
        "name": "LockShow",
        "query": "SELECT * FROM central_door_lock;",
        "postgreSQLConfig": "e3ffd5e15083fcd3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "ecd85c1068d6a144"
            ]
        ]
    },
    {
        "id": "43218188dafe2a4f",
        "type": "switch",
        "z": "9d7704be57c4957b",
        "name": "check if central door is locked",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 260,
        "wires": [
            [
                "62779206c088cc5b"
            ]
        ]
    },
    {
        "id": "5843e3cb950d7ac2",
        "type": "mqtt in",
        "z": "9d7704be57c4957b",
        "name": "",
        "topic": "topic/alarm",
        "qos": "2",
        "datatype": "auto",
        "broker": "010e84cda878a155",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "11274c270aaf96c4"
            ]
        ]
    },
    {
        "id": "11274c270aaf96c4",
        "type": "json",
        "z": "9d7704be57c4957b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 500,
        "wires": [
            [
                "cca33d86fbebd92d"
            ]
        ]
    },
    {
        "id": "cca33d86fbebd92d",
        "type": "switch",
        "z": "9d7704be57c4957b",
        "name": "check if alarm is open",
        "property": "payload.isopen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 540,
        "y": 500,
        "wires": [
            [
                "c8f8861b4446dfcc"
            ]
        ]
    },
    {
        "id": "1a298969ff0954fd",
        "type": "debug",
        "z": "9d7704be57c4957b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 260,
        "wires": []
    },
    {
        "id": "a87258708edfaee5",
        "type": "join",
        "z": "9d7704be57c4957b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 930,
        "y": 280,
        "wires": [
            [
                "47932923b1a18362"
            ]
        ]
    },
    {
        "id": "62779206c088cc5b",
        "type": "function",
        "z": "9d7704be57c4957b",
        "name": "",
        "func": "msg.topic = 'lock'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 280,
        "wires": [
            [
                "a87258708edfaee5"
            ]
        ]
    },
    {
        "id": "c8f8861b4446dfcc",
        "type": "function",
        "z": "9d7704be57c4957b",
        "name": "",
        "func": "msg.topic = 'alarm'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 400,
        "wires": [
            [
                "a87258708edfaee5"
            ]
        ]
    },
    {
        "id": "47932923b1a18362",
        "type": "function",
        "z": "9d7704be57c4957b",
        "name": "",
        "func": "var mes1 = {};\nmes1.payload = \"Central Door detected unlocked while alarm is ON!\";\nreturn mes1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "1a298969ff0954fd",
                "ff3a9155dcc2fac1"
            ]
        ]
    },
    {
        "id": "bda1d1d1db2d1a8c",
        "type": "comment",
        "z": "9d7704be57c4957b",
        "name": "",
        "info": "Check if any window is open while alarm is ON.",
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "b60ab6f5e9cd09ee",
        "type": "comment",
        "z": "9d7704be57c4957b",
        "name": "",
        "info": "Check if any balcony or central or garage door is open while alarm is ON.",
        "x": 1020,
        "y": 440,
        "wires": []
    },
    {
        "id": "ecd85c1068d6a144",
        "type": "debug",
        "z": "9d7704be57c4957b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 140,
        "wires": []
    },
    {
        "id": "ff3a9155dcc2fac1",
        "type": "slack",
        "z": "9d7704be57c4957b",
        "name": "",
        "channelURL": "https://hooks.slack.com/services/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",
        "username": "SmartHome - Central Door",
        "emojiIcon": " ",
        "channel": "",
        "x": 1250,
        "y": 360,
        "wires": []
    }
]
